#include <bits/stdc++.h>
using namespace std;
#define ll             long long int 
#define ulli           unsigned long long int 
#define li             long int 
#define ff(i,a,b)      for(int i=a;i<=b;i++)
#define fb(i,b,a)      for(int i=b;i>=a;i--)
#define w(t)           while(--t >= 0)
#define l(s)           s.length()
#define ci(n)          cin>>n;
#define fast           ios_base::sync_with_stdio(false);
#define sa(a,n)        sort(a,a+n)
#define sv(v)          sort(v.begin(),v.end())
#define cy             cout<<"YES\n"
#define cn             cout<<"NO\n"
#define nl             cout<<"\n"
#define minus          cout<<"-1\n";
#define vi             vector<int>
#define pb             push_back
#define tc             int t; cin>>t;
#define pp             pair<int,int>
#define input(a,n)     for(int i=0;i<n;i++) cin>>a[i];
#define mod            1000000007
#define co(n)          cout<<n;
#define ret            return 0
#define mi             map<int,int>
#define output(a,n)    for(int i=0;i<n;i++) cout<<a[i]<<" ";   

int Map[26][26];
int p1=-1,p2=-1;
int main()
{
    string a,b;
    int n,count=0;
    cin>>n;
    cin>>a>>b;
    memset(Map,-1,sizeof(Map));
    for(int j=0;j<n;j++)
    {
        if(a[j]!=b[j])
        {
           Map[a[j]-'a'][b[j]-'a']=j;
           count++;
        }
    }
    for(int i=0;i<26;i++)
    {
        for(int j=0;j<26;j++)
        {
            if(Map[i][j]!=-1&&Map[j][i]!=-1)
            {
                p1=Map[i][j]+1;
                p2=Map[j][i]+1;
                count -= 2;
                printf("%d\n",count);
                printf("%d %d\n",p1,p2);
                ret;
            }
        }
    }
    for(int i=0;i<26;i++)
    {
        for(int j=0;j<26;j++)
        {
            for(int k=0;k<26;k++)
            {
                if(Map[i][j]!=-1&&Map[j][k]!=-1)
                {
                    p1=Map[i][j]+1;
                    p2=Map[j][k]+1;
                    count--;
                    printf("%d\n",count);
                    printf("%d %d\n",p1,p2);
                    ret;
                }
            }
        }
    }
    printf("%d\n",count);
    printf("%d %d\n",p1,p2);
    return 0;
}
