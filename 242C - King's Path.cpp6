#include <bits/stdc++.h>
#define int long long
using namespace std;
int dx[] = { -1, -1, -1, 0, 0, 1, 1, 1};
int dy[] = {0, 1, -1, 1, -1, 0, 1, -1};
int solve()
{
	int x0, y0, x1, y1;
	cin>>x0>>y0>>x1>>y1;
	int n;
	cin>>n;
	int r, a, b;
	map<pair<int, int>, int> mp, vis;
	for(int i=0; i<n; i++) 
	{
		cin>>r>>a>>b;
		for(int j=a; j<=b; j++) 
		{
			mp[{r, j}]++;
		}
	}
	queue<pair<pair<int, int>, int>> q;
	q.push({{x0, y0}, 0});
	vis[{x0, y0}]++;
	while(!q.empty()) 
	{
		auto it = q.front();
		q.pop();
		int x = it.first.first;
		int y = it.first.second;
		int steps = it.second;
		for(int i=0; i<8; i++) 
		{
			int newi = x+dx[i];
			int newj = y+dy[i];
			if(vis.find({newi, newj}) == vis.end() && mp.find({newi, newj}) != mp.end()) 
			{
				q.push({{newi, newj}, steps+1});
				vis[{newi, newj}]++;
				if(newi == x1 && newj == y1)
				{
					return(steps + 1);
				}
			}
		}
	}
	return -1;
}
int32_t main() 
{
	cout<<solve();
	return 0;
}
